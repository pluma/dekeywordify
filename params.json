{"name":"dekeywordify","tagline":"escape reserved property keyword names","body":"# Synopsis\r\n\r\n**dekeywordify** is a [browserify](https://github.com/substack/node-browserify) transform for escaping property names that use reserved keywords.\r\n\r\nNote that in order to be thorough, `dekeywordify` currently transforms the entire source code into an abstract syntax tree and back. This may cause problems with browserify's source maps. Or not.\r\n\r\nThis library uses [browserify-transform-tools](https://github.com/benbria/browserify-transform-tools), so you can also supply the configuration by adding a `dekeywordify` field to your project's `package.json` file.\r\n\r\n[![stability 3 - stable](http://b.repl.ca/v1/stability-3_--_stable-yellowgreen.png)\r\n](http://nodejs.org/api/documentation.html#documentation_stability_index) [![license - Unlicense](http://b.repl.ca/v1/license-Unlicense-lightgrey.png)](http://unlicense.org/) [![Flattr this](https://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=pluma&url=https://github.com/pluma/dekeywordify)\r\n\r\n[![Build Status](https://travis-ci.org/pluma/dekeywordify.png?branch=master)](https://travis-ci.org/pluma/dekeywordify) [![Coverage Status](https://coveralls.io/repos/pluma/dekeywordify/badge.png?branch=master)](https://coveralls.io/r/pluma/dekeywordify?branch=master) [![Dependencies](https://david-dm.org/pluma/dekeywordify.png?theme=shields.io)](https://david-dm.org/pluma/dekeywordify)\r\n\r\n[![NPM status](https://nodei.co/npm/dekeywordify.png?compact=true)](https://npmjs.org/package/dekeywordify)\r\n\r\n# Rationale\r\n\r\nWhen your favourite library's API was developed with only modern JavaScript engines in mind and you suddenly find yourself with code using reserved keywords as property names all over the place, this transform saves you the trouble of having to escape all references with their string literal equivalents.\r\n\r\n# Install\r\n\r\n## Node.js\r\n\r\n### With NPM\r\n\r\n```sh\r\nnpm install dekeywordify\r\n```\r\n\r\n### From source\r\n\r\n```sh\r\ngit clone https://github.com/pluma/dekeywordify.git\r\ncd dekeywordify\r\nnpm install\r\nmake test\r\n```\r\n\r\n# Basic usage example\r\n\r\n## Source\r\n\r\n```javascript\r\ndoSomething().then(doMoreThings).finally(function(arg) {\r\n    console.log({var: arg});\r\n});\r\n```\r\n\r\n## Result\r\n\r\n```javascript\r\ndoSomething().then(doMoreThings)['finally'](function(arg) {\r\n    console.log({'var': arg});\r\n});\r\n```\r\n\r\n## Usage\r\n\r\n```javascript\r\nvar browserify = require('browserify'),\r\n    dekeywordify = require('dekeywordify'),\r\n    b = browserify();\r\n\r\nb.transform(dekeywordify);\r\nb.add('./app.js');\r\nb.bundle().pipe(require('fs').createWriteStream('bundle.js'));\r\n```\r\n\r\n# Usage example with configure\r\n\r\n```javascript\r\nvar browserify = require('browserify'),\r\n    dekeywordify = require('dekeywordify'),\r\n    b = browserify();\r\n\r\nb.transform(dekeywordify.configure({\r\n    allow: [\"debugger\"], // keywords that should not be escaped\r\n    extra: [\"cheese\"] // additional property names to escape\r\n}));\r\nb.add('./app.js');\r\nb.bundle().pipe(require('fs').createWriteStream('bundle.js'));\r\n```\r\n\r\n# Usage example with package.json\r\n\r\n## package.json\r\n\r\n```json\r\n{\r\n    \"name\": \"my-awesome-project\",\r\n    \"devDependencies\": {\r\n        \"browserify\": \"*\",\r\n        \"dekeywordify\": \"*\"\r\n    },\r\n    \"dekeywordify\": {\r\n        \"allow\": [\"debugger\"],\r\n        \"forbid\": [\"cheese\"]\r\n    }\r\n}\r\n```\r\n\r\n### Usage (API)\r\n\r\n```javascript\r\nvar browserify = require('browserify'),\r\n    dekeywordify = require('dekeywordify'),\r\n    b = browserify();\r\n\r\nb.transform(dekeywordify);\r\nb.add('./app.js');\r\nb.bundle().pipe(require('fs').createWriteStream('bundle.js'));\r\n```\r\n\r\n### Usage (Shell)\r\n\r\n```sh\r\nbrowserify -t dekeywordify ./app.js > bundle.js\r\n```\r\n\r\n# API\r\n\r\n## dekeywordify.configure(config):transform\r\n\r\nCreates a browserify transform that will use the given `config`:\r\n\r\n### config.useDefaults:Boolean (default: true)\r\n\r\nWhether to use the built-in keyword list (containing all keywords of ES5 in addition to the reserved future keyword list from ES3). If set to `false`, only the keywords listed in `config.extra` will be escaped.\r\n\r\n### config.allow (optional)\r\n\r\nAn array of property names that should not be escaped even if they are (reserved) keywords.\r\n\r\n### config.extra (optional)\r\n\r\nAn array of property names that should be escaped in addition to the keywords.\r\n\r\n# Unlicense\r\n\r\nThis is free and unencumbered public domain software. For more information, see http://unlicense.org/ or the accompanying [UNLICENSE](https://github.com/pluma/dekeywordify/blob/master/UNLICENSE) file.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}